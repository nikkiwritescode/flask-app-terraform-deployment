dist: xenial
language: bash

before_install: # Download and install Terraform for us on the container (v0.15.5)
  - wget https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip
  - unzip terraform_0.15.5_linux_amd64.zip
  - sudo mv terraform /usr/local/bin/
  - rm terraform_0.15.5_linux_amd64.zip

jobs:
  include:
    - stage: terraform plan # When a Pull Request is created - Validate our plan
      if: type IN (pull_request)
      script:
        - terraform init
        - terraform plan -out build.plan

    - stage: terraform apply # Merge our PR - Deploy it!
      if: type IN (push) and branch = main
      script:
        - terraform init
        - terraform plan -out build.plan
        - terraform apply build.plan

# Filter to only run this pipeline when it involves actions against the main branch
branches:
  only:
    - main

env:
  global:
    - TF_VAR_app_name="demo_flask_app"
    - TF_VAR_build_env="TravisCI"
    - TF_VAR_env_prefix="dev"
    - TF_VAR_avail_zone_1="us-east-2a"
    - TF_VAR_avail_zone_2="us-east-2b"
    - TF_VAR_avail_zone_3="us-east-2c"
    - TF_VAR_asg_desired_capacity=2
    - TF_VAR_asg_max_size=2
    - TF_VAR_asg_min_size=2
    - TF_VAR_instance_type="t4g.nano"
    - TF_VAR_ami_id="ami-0f9c27d16302904d1"
    - TF_VAR_subnet_cidr_block_1="10.0.10.0/24"
    - TF_VAR_subnet_cidr_block_2="10.0.20.0/24"
    - TF_VAR_subnet_cidr_block_3="10.0.30.0/24"
    - TF_VAR_vpc_cidr_block="10.0.0.0/16"